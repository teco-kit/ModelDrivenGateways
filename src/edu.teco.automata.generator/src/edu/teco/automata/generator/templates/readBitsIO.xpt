«IMPORT Automata»
«IMPORT edu::teco::automata::generator::templates»
«EXTENSION edu::teco::automata::generator::templates::util»
«EXTENSION edu::teco::automata::generator::templates::config»

«DEFINE root FOR StateMachine»
   «FILE getJavaClassName()+".java"»
      package edu.teco.automata.generator.gen;

      public class «getJavaClassName()» «IF getJavaInterfaceName()!=null-»implements «getJavaInterfaceName()-»«ENDIF-» {
         private int         label = 0;
         
         public void run(«EXPAND encoderRoot::inArg»,  «EXPAND encoderRoot::outArg») throws  java.io.IOException,org.xml.sax.SAXException {
            
            while(true)
            {
            switch (label)
            {
             «clear()»
  			 «resetCase()»
   			 «FOREACH states AS st»
     		 «EXPAND encoderRoot::initNeeded FOR st»
   			 «ENDFOREACH»
  			 «clear()»
  			 «resetCase()»
            «resetCase()»
            «FOREACH states AS st ITERATOR i»
               «EXPAND encoderRoot::state(i.counter0) FOR st»
            «ENDFOREACH»
            }
            }
         }
      }
   «ENDFILE»   
«ENDDEFINE»

«AROUND edu::teco::automata::generator::templates::encoderRoot::inArg FOR StateMachine»
edu.teco.automata.generator.core.BitsIO in
«ENDAROUND»

«AROUND edu::teco::automata::generator::templates::encoderRoot::constLoopBegin(Integer count) 
 FOR SimpleState»
   for (int lowB«count» = «lowerBound»true, lowB«count» > 0,lowB«count»--;)      
    «targetDef.proceed()»
«ENDAROUND»

«AROUND edu::teco::automata::generator::templates::encoderRoot::loopBegin(Integer count) 
FOR SimpleState»
   /* loop «getCurrPath() + name» */
   while(in.read_bit())  /* depth «depth» */
   «targetDef.proceed()»
«ENDAROUND»

«AROUND edu::teco::automata::generator::templates::encoderRoot::complexLoopBegin(Integer count, Integer label) FOR SimpleState»
   if(in.read_bit())
   { /* depth «depth»*/
   «targetDef.proceed()»
   }
   else
   {
      label = «getEndCase()» ;
      continue;
   } /* «name» */
«ENDAROUND»

«AROUND edu::teco::automata::generator::templates::encoderRoot::complexConstLoopBegin(Integer count, Integer label) FOR SimpleState» 
   if(in.read_bit())
   { /* depth «depth»*/
   «targetDef.proceed()»
   }
   else
   {
      label = «getEndCase()»;
      continue;
   } /* «name» */
«ENDAROUND»

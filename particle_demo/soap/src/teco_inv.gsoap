/* teco_inv.gsoap
   Generated by wsdl2h 1.2.12 from SensorValues_inv.wsdl and typemap.dat
   2009-01-19 12:26:32 GMT
   Copyright (C) 2001-2008 Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/* NOTE:

 - Compile this file with soapcpp2 to complete the code generation process.
 - Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) to browse this file.
 - Use wsdl2h option -l to view the software license terms.

   DO NOT include this file directly into your project.
   Include only the soapcpp2-generated headers and source code files.
*/

//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * http://www.teco.edu/SensorValues                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/

#import "devprof_2006_02.gsoap"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/

// This service uses SOAP 1.2 namespaces:
//gsoap SOAP-ENV schema namespace:	http://www.w3.org/2003/05/soap-envelope
//gsoap SOAP-ENC schema namespace:	http://www.w3.org/2003/05/soap-encoding

/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

teco_inv1 = "http://www.teco.edu/SensorValues"

*/

//gsoap teco_inv1 schema namespace:	http://www.teco.edu/SensorValues
//gsoap teco_inv1 schema elementForm:	qualified
//gsoap teco_inv1 schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Schema Types                                                               *
 *                                                                            *
\******************************************************************************/


/// Built-in type "xs:byte".
typedef char xsd__byte;

/// Built-in type "xs:unsignedByte".
typedef unsigned char xsd__unsignedByte;


/// "http://www.teco.edu/SensorValues":GravityType is a complexType.
struct teco_USCOREinv1__GravityType
{
/// Element AcclValue of type xs:unsignedShort.
    unsigned short                       AcclValue                      1;	///< Required element.
/// Element AcclIdx of type xs:unsignedByte.
    xsd__unsignedByte                    AcclIdx                        1;	///< Required element.
};

/// "http://www.teco.edu/SensorValues":LightType is a complexType.
struct teco_USCOREinv1__LightType
{
/// Element LightValue of type xs:unsignedByte.
    xsd__unsignedByte                    LightValue                     1;	///< Required element.
/// Element LightIdx of type xs:unsignedByte.
    xsd__unsignedByte                    LightIdx                       1;	///< Required element.
};

/// "http://www.teco.edu/SensorValues":ForceType is a complexType.
struct teco_USCOREinv1__ForceType
{
/// Element ForceValue of type xs:unsignedByte.
    xsd__unsignedByte                    ForceValue                     1;	///< Required element.
/// Element ForceIdx of type xs:unsignedByte.
    xsd__unsignedByte                    ForceIdx                       1;	///< Required element.
};

/// "http://www.teco.edu/SensorValues":TempType is a complexType.
struct teco_USCOREinv1__TempType
{
/// Element TempValue of type xs:byte.
    xsd__byte                            TempValue                      1;	///< Required element.
/// Element TempIdx of type xs:unsignedByte.
    xsd__unsignedByte                    TempIdx                        1;	///< Required element.
};

/// "http://www.teco.edu/SensorValues":SensorValuesType is a complexType.
struct teco_USCOREinv1__SensorValuesType
{
/// Element AcclX of type "http://www.teco.edu/SensorValues":GravityType.
    struct teco_USCOREinv1__GravityType*  AcclX                          0;	///< Optional element.
/// Element AcclY of type "http://www.teco.edu/SensorValues":GravityType.
    struct teco_USCOREinv1__GravityType*  AcclY                          0;	///< Optional element.
/// Element AcclZ of type "http://www.teco.edu/SensorValues":GravityType.
    struct teco_USCOREinv1__GravityType*  AcclZ                          0;	///< Optional element.
/// Element Audio of type xs:byte.
    xsd__byte*                           Audio                          0;	///< Optional element.
/// Element Light of type "http://www.teco.edu/SensorValues":LightType.
    struct teco_USCOREinv1__LightType*   Light                          0;	///< Optional element.
/// Element AmbientLight of type "http://www.teco.edu/SensorValues":LightType.
    struct teco_USCOREinv1__LightType*   AmbientLight                   0;	///< Optional element.
/// Element Force of type "http://www.teco.edu/SensorValues":ForceType.
    struct teco_USCOREinv1__ForceType*   Force                          0;	///< Optional element.
/// Element Temperature of type "http://www.teco.edu/SensorValues":TempType.
    struct teco_USCOREinv1__TempType*    Temperature                    0;	///< Optional element.
/// Element Voltage of type xs:unsignedShort.
    unsigned short*                      Voltage                        0;	///< Optional element.
};

/// Element "http://www.teco.edu/SensorValues":SensorValues of type "http://www.teco.edu/SensorValues":SensorValuesType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap teco_inv1 service name:	SensorValuesSOAP 
//gsoap teco_inv1 service type:	SensorValuesPort 
//gsoap teco_inv1 service port:	 
//gsoap teco_inv1 service namespace:	http://www.teco.edu/SensorValues 
//gsoap teco_inv1 service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage SensorValues Definitions

@section SensorValues_bindings Bindings
  - @ref SensorValuesSOAP

*/

/**

@page SensorValuesSOAP Binding "SensorValuesSOAP"

@section SensorValuesSOAP_operations Operations of Binding  "SensorValuesSOAP"
  - @ref __teco_USCOREinv1__GetSensorValues
  - @ref __teco_USCOREinv1__SensorValuesEvent

@section SensorValuesSOAP_ports Endpoints of Binding  "SensorValuesSOAP"
  - 

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * SensorValuesSOAP                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * __teco_USCOREinv1__GetSensorValues                                         *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "__teco_USCOREinv1__GetSensorValuesResponse" of service binding "SensorValuesSOAP" operation "__teco_USCOREinv1__GetSensorValues"
struct __teco_USCOREinv1__GetSensorValuesResponse
{
};

/// Operation "__teco_USCOREinv1__GetSensorValues" of service binding "SensorValuesSOAP"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___teco_USCOREinv1__GetSensorValues(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct teco_USCOREinv1__SensorValuesType* teco_USCOREinv1__SensorValues,
    // response parameters:
    struct __teco_USCOREinv1__GetSensorValuesResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __teco_USCOREinv1__GetSensorValues(
    struct soap *soap,
    // request parameters:
    struct teco_USCOREinv1__SensorValuesType* teco_USCOREinv1__SensorValues,
    // response parameters:
    struct __teco_USCOREinv1__GetSensorValuesResponse*
  );
@endcode

*/

//gsoap teco_inv1 service method-style:	GetSensorValues document
//gsoap teco_inv1 service method-encoding:	GetSensorValues literal
int __teco_USCOREinv1__GetSensorValues(
    struct teco_USCOREinv1__SensorValuesType* teco_USCOREinv1__SensorValues,	///< Request parameter
    struct __teco_USCOREinv1__GetSensorValuesResponse*	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * __teco_USCOREinv1__SensorValuesEvent                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__teco_USCOREinv1__SensorValuesEvent" of service binding "SensorValuesSOAP"

/**

Operation details:

  - One-way message
  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___teco_USCOREinv1__SensorValuesEvent(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct teco_USCOREinv1__SensorValuesType* teco_USCOREinv1__SensorValues,
    // response parameters:
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __teco_USCOREinv1__SensorValuesEvent(
    struct soap *soap,
    // request parameters:
    struct teco_USCOREinv1__SensorValuesType* teco_USCOREinv1__SensorValues,
    // response parameters:
  );
@endcode

*/

//gsoap teco_inv1 service method-style:	SensorValuesEvent document
//gsoap teco_inv1 service method-encoding:	SensorValuesEvent literal
//gsoap teco_inv1 service method-action:	SensorValuesEvent http://www.teco.edu/SensorValues/SensorValuesEventOut
int __teco_USCOREinv1__SensorValuesEvent(
    struct teco_USCOREinv1__SensorValuesType* teco_USCOREinv1__SensorValues,	///< Request parameter
    void	///< One-way message: no response parameter
);

/* End of teco_inv.gsoap */

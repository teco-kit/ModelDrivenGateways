
import squery;

extension org::openarchitectureware::xtext::registry::Modelloader reexport;

List[emf::EObject] allElements(emf::EObject x):
	x.allLocalElements()
			.union(x.allLocalElements().typeSelect(Automata).collect(e|e.model(false).allLocalElements()))
		.flatten().toSet();
		
List[emf::EObject] allVisibleElements(emf::EObject x):
	x.allElements();

List[emf::EObject] allLocalElements(emf::EObject x):
	{x.eRootContainer}.union(x.eRootContainer.eAllContents);

String id(emf::EObject x) :
	let p = x.metaType.getProperty("name") :
		p==null?
			null :
			p.get(x);
			
List[emf::EObject] model(Automata this, boolean forceLinking) :
	model==null?{}:model.load(this, forceLinking).flatten();
	
List[emf::EObject] model(Automata x) :
	model(x,true);

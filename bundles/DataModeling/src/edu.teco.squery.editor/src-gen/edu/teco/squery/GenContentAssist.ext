import squery;
import Automata;
import codeassist;

extension edu::teco::squery::EditorExtensions;

/* proposals for Feature BoolExpression::op2 */
List[Proposal] completeBoolExpression_op2(emf::EObject ctx, String prefix) :
	{newProposal("BoolExpressionOp2")};

/* proposals for Feature Action::name */
List[Proposal] completeAction_name(emf::EObject ctx, String prefix) :
	{newProposal("ActionName")};



/* proposals for Feature QueryModel::actions */
List[Proposal] completeQueryModel_actions(emf::EObject ctx, String prefix) :
	{};

/* proposals for Feature BoolExpression::operand */
List[Proposal] completeBoolExpression_operand(emf::EObject ctx, String prefix) :
	{};

/* proposals for Feature Query::st */
List[Proposal] completeQuery_st(emf::EObject ctx, String prefix) :
	{};

/* proposals for Feature Query::condition */
List[Proposal] completeQuery_condition(emf::EObject ctx, String prefix) :
	{};

/* proposals for Feature Condition::expressions */
List[Proposal] completeCondition_expressions(emf::EObject ctx, String prefix) :
	{};

/* proposals for Feature Action::query */
List[Proposal] completeAction_query(emf::EObject ctx, String prefix) :
	{};

/* proposals for Feature Condition::expressions */
List[Proposal] completeCondition_expressions(emf::EObject ctx, String prefix) :
	{};

/* proposals for Feature BoolExpression::op1 */
List[Proposal] completeBoolExpression_op1(emf::EObject ctx, String prefix) :
	{};

/* proposals for Feature QueryModel::automata */
List[Proposal] completeQueryModel_automata(emf::EObject ctx, String prefix) :
	{};





/* proposals for State::state */
List[Proposal] completeState_state(emf::EObject ctx, String prefix) :
	ctx.allVisibleElements().typeSelect(Automata::SimpleState).collect(x|newProposal(x.label(),x.id(),x.image()));

/* proposals for State::state */
List[Proposal] completeState_state(emf::EObject ctx, String prefix) :
	ctx.allVisibleElements().typeSelect(Automata::SimpleState).collect(x|newProposal(x.label(),x.id(),x.image()));


List[Proposal] sortProposals(List[Proposal] proposalsToSort):
	proposalsToSort.sortBy(e|e.label.toLowerCase());

isKeywordProposal(Proposal this):
	type == codeassist::Type::KEYWORD;

isAssignmentProposal(Proposal this):
	type == codeassist::Type::ASSIGNMENT;
	
isEnumProposal(Proposal this):
	type == codeassist::Type::ENUM_LITERAL;

// create extensions
Proposal newProposal(String proposal) :
	newProposal(proposal,proposal);
	
Proposal newProposal(String label, String toReplace) :
	newProposal(label,toReplace,"default.gif");
	
create Proposal newProposal(String label, String replace, String image) :
	setLabel(label==null?"ERROR":label)->
	setToInsert(replace==null?"ERROR":replace)->
	setImage(image);

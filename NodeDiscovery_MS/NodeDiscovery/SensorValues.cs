//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 


/// <remarks/>
// CODEGEN: The operation 'SensorValuesEvent' from namespace 'http://www.teco.edu/SensorValues' was ignored.  Notification is not supported.
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="SensorValuesSOAP", Namespace="http://www.teco.edu/SensorValues")]
public partial class SensorValues : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback GetSensorValuesOperationCompleted;
    
    private System.Threading.SendOrPostCallback ConfigOperationCompleted;
    
    /// <remarks/>
    public SensorValues() {
        this.SoapVersion = System.Web.Services.Protocols.SoapProtocolVersion.Soap12;
        this.Url = "http://localhost:8080";
    }
    
    /// <remarks/>
    public event GetSensorValuesCompletedEventHandler GetSensorValuesCompleted;
    
    /// <remarks/>
    public event ConfigCompletedEventHandler ConfigCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.teco.edu/GetSensorValues", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlElementAttribute("Sample", Namespace="http://www.teco.edu/SensorValues")]
    public SSimpSample GetSensorValues() {
        object[] results = this.Invoke("GetSensorValues", new object[0]);
        return ((SSimpSample)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetSensorValues(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetSensorValues", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public SSimpSample EndGetSensorValues(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((SSimpSample)(results[0]));
    }
    
    /// <remarks/>
    public void GetSensorValuesAsync() {
        this.GetSensorValuesAsync(null);
    }
    
    /// <remarks/>
    public void GetSensorValuesAsync(object userState) {
        if ((this.GetSensorValuesOperationCompleted == null)) {
            this.GetSensorValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSensorValuesOperationCompleted);
        }
        this.InvokeAsync("GetSensorValues", new object[0], this.GetSensorValuesOperationCompleted, userState);
    }
    
    private void OnGetSensorValuesOperationCompleted(object arg) {
        if ((this.GetSensorValuesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetSensorValuesCompleted(this, new GetSensorValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.teco.edu/Config", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlElementAttribute("Status", Namespace="http://www.teco.edu/SensorValues")]
    public SSimpStatus Config([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.teco.edu/SensorValues")] SSimpControl StatusControl) {
        object[] results = this.Invoke("Config", new object[] {
                    StatusControl});
        return ((SSimpStatus)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginConfig(SSimpControl StatusControl, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Config", new object[] {
                    StatusControl}, callback, asyncState);
    }
    
    /// <remarks/>
    public SSimpStatus EndConfig(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((SSimpStatus)(results[0]));
    }
    
    /// <remarks/>
    public void ConfigAsync(SSimpControl StatusControl) {
        this.ConfigAsync(StatusControl, null);
    }
    
    /// <remarks/>
    public void ConfigAsync(SSimpControl StatusControl, object userState) {
        if ((this.ConfigOperationCompleted == null)) {
            this.ConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfigOperationCompleted);
        }
        this.InvokeAsync("Config", new object[] {
                    StatusControl}, this.ConfigOperationCompleted, userState);
    }
    
    private void OnConfigOperationCompleted(object arg) {
        if ((this.ConfigCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ConfigCompleted(this, new ConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.teco.edu/SensorValues")]
public partial class SSimpSample {
    
    private System.DateTime timeStampField;
    
    private bool timeStampFieldSpecified;
    
    private ADXL210_Sample accellerationField;
    
    private SP101_Sample audioField;
    
    private TSL2550_Sample lightField;
    
    private FSR152_Sample forceField;
    
    private TC74_Sample temperatureField;
    
    /// <remarks/>
    public System.DateTime TimeStamp {
        get {
            return this.timeStampField;
        }
        set {
            this.timeStampField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TimeStampSpecified {
        get {
            return this.timeStampFieldSpecified;
        }
        set {
            this.timeStampFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public ADXL210_Sample Accelleration {
        get {
            return this.accellerationField;
        }
        set {
            this.accellerationField = value;
        }
    }
    
    /// <remarks/>
    public SP101_Sample Audio {
        get {
            return this.audioField;
        }
        set {
            this.audioField = value;
        }
    }
    
    /// <remarks/>
    public TSL2550_Sample Light {
        get {
            return this.lightField;
        }
        set {
            this.lightField = value;
        }
    }
    
    /// <remarks/>
    public FSR152_Sample Force {
        get {
            return this.forceField;
        }
        set {
            this.forceField = value;
        }
    }
    
    /// <remarks/>
    public TC74_Sample Temperature {
        get {
            return this.temperatureField;
        }
        set {
            this.temperatureField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.teco.edu/SensorValues")]
public partial class ADXL210_Sample {
    
    private short xField;
    
    private short yField;
    
    private short zField;
    
    private sbyte indexField;
    
    private bool indexFieldSpecified;
    
    /// <remarks/>
    public short x {
        get {
            return this.xField;
        }
        set {
            this.xField = value;
        }
    }
    
    /// <remarks/>
    public short y {
        get {
            return this.yField;
        }
        set {
            this.yField = value;
        }
    }
    
    /// <remarks/>
    public short z {
        get {
            return this.zField;
        }
        set {
            this.zField = value;
        }
    }
    
    /// <remarks/>
    public sbyte index {
        get {
            return this.indexField;
        }
        set {
            this.indexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool indexSpecified {
        get {
            return this.indexFieldSpecified;
        }
        set {
            this.indexFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.teco.edu/SensorValues")]
public partial class SSimpStatus {
    
    private SensorConfigurationType sensorConfigField;
    
    private SensorConfigurationType allSensorConfigField;
    
    private ushort batteryVoltageField;
    
    private System.DateTime currentTimeField;
    
    private System.DateTime upTimeField;
    
    /// <remarks/>
    public SensorConfigurationType SensorConfig {
        get {
            return this.sensorConfigField;
        }
        set {
            this.sensorConfigField = value;
        }
    }
    
    /// <remarks/>
    public SensorConfigurationType AllSensorConfig {
        get {
            return this.allSensorConfigField;
        }
        set {
            this.allSensorConfigField = value;
        }
    }
    
    /// <remarks/>
    public ushort BatteryVoltage {
        get {
            return this.batteryVoltageField;
        }
        set {
            this.batteryVoltageField = value;
        }
    }
    
    /// <remarks/>
    public System.DateTime CurrentTime {
        get {
            return this.currentTimeField;
        }
        set {
            this.currentTimeField = value;
        }
    }
    
    /// <remarks/>
    public System.DateTime UpTime {
        get {
            return this.upTimeField;
        }
        set {
            this.upTimeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.teco.edu/SensorValues")]
public partial class SensorConfigurationType {
    
    private SSimpRateConfig accelerationField;
    
    private SSimpRateConfig audioField;
    
    private SSimpRateConfig lightField;
    
    private SSimpRateConfig ambientLightField;
    
    private SSimpRateConfig forceField;
    
    private SSimpRateConfig temperatureField;
    
    /// <remarks/>
    public SSimpRateConfig Acceleration {
        get {
            return this.accelerationField;
        }
        set {
            this.accelerationField = value;
        }
    }
    
    /// <remarks/>
    public SSimpRateConfig Audio {
        get {
            return this.audioField;
        }
        set {
            this.audioField = value;
        }
    }
    
    /// <remarks/>
    public SSimpRateConfig Light {
        get {
            return this.lightField;
        }
        set {
            this.lightField = value;
        }
    }
    
    /// <remarks/>
    public SSimpRateConfig AmbientLight {
        get {
            return this.ambientLightField;
        }
        set {
            this.ambientLightField = value;
        }
    }
    
    /// <remarks/>
    public SSimpRateConfig Force {
        get {
            return this.forceField;
        }
        set {
            this.forceField = value;
        }
    }
    
    /// <remarks/>
    public SSimpRateConfig Temperature {
        get {
            return this.temperatureField;
        }
        set {
            this.temperatureField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.teco.edu/SensorValues")]
public partial class SSimpRateConfig {
    
    private sbyte rateField;
    
    /// <remarks/>
    public sbyte rate {
        get {
            return this.rateField;
        }
        set {
            this.rateField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.teco.edu/SensorValues")]
public partial class SSimpControl {
    
    private SensorConfigurationType sensorConfigField;
    
    private System.DateTime newTimeField;
    
    private bool newTimeFieldSpecified;
    
    /// <remarks/>
    public SensorConfigurationType SensorConfig {
        get {
            return this.sensorConfigField;
        }
        set {
            this.sensorConfigField = value;
        }
    }
    
    /// <remarks/>
    public System.DateTime NewTime {
        get {
            return this.newTimeField;
        }
        set {
            this.newTimeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool NewTimeSpecified {
        get {
            return this.newTimeFieldSpecified;
        }
        set {
            this.newTimeFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.teco.edu/SensorValues")]
public partial class TC74_Sample {
    
    private sbyte valueField;
    
    private sbyte indexField;
    
    private bool indexFieldSpecified;
    
    /// <remarks/>
    public sbyte value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    public sbyte index {
        get {
            return this.indexField;
        }
        set {
            this.indexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool indexSpecified {
        get {
            return this.indexFieldSpecified;
        }
        set {
            this.indexFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.teco.edu/SensorValues")]
public partial class FSR152_Sample {
    
    private byte valueField;
    
    private sbyte indexField;
    
    private bool indexFieldSpecified;
    
    /// <remarks/>
    public byte value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    public sbyte index {
        get {
            return this.indexField;
        }
        set {
            this.indexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool indexSpecified {
        get {
            return this.indexFieldSpecified;
        }
        set {
            this.indexFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.teco.edu/SensorValues")]
public partial class TSL2550_Sample {
    
    private ushort daylightField;
    
    private ushort infraredField;
    
    private sbyte indexField;
    
    private bool indexFieldSpecified;
    
    /// <remarks/>
    public ushort daylight {
        get {
            return this.daylightField;
        }
        set {
            this.daylightField = value;
        }
    }
    
    /// <remarks/>
    public ushort infrared {
        get {
            return this.infraredField;
        }
        set {
            this.infraredField = value;
        }
    }
    
    /// <remarks/>
    public sbyte index {
        get {
            return this.indexField;
        }
        set {
            this.indexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool indexSpecified {
        get {
            return this.indexFieldSpecified;
        }
        set {
            this.indexFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.teco.edu/SensorValues")]
public partial class SP101_Sample {
    
    private byte volumeField;
    
    private sbyte indexField;
    
    private bool indexFieldSpecified;
    
    /// <remarks/>
    public byte volume {
        get {
            return this.volumeField;
        }
        set {
            this.volumeField = value;
        }
    }
    
    /// <remarks/>
    public sbyte index {
        get {
            return this.indexField;
        }
        set {
            this.indexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool indexSpecified {
        get {
            return this.indexFieldSpecified;
        }
        set {
            this.indexFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetSensorValuesCompletedEventHandler(object sender, GetSensorValuesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetSensorValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetSensorValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SSimpSample Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SSimpSample)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void ConfigCompletedEventHandler(object sender, ConfigCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SSimpStatus Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SSimpStatus)(this.results[0]));
        }
    }
}
